!alias join <drac2>
# Get the user who ran the command
user = ctx.author

# Load the current settings
settings = get_svar("dungeon_settings")
settings = load_json(settings)

# Get the user's active character
cc = character()
portrait = cc.image if cc else ""

# Get the current combat instance
current_combat = combat()
if not current_combat:
    return "No active combat found. Please start the dungeon first with `!tower begin`."

# Retrieve the initiative metadata
dungeon_metadata = current_combat.get_metadata("dungeon_state")
if not dungeon_metadata:
    return "No dungeon state found. Please start the dungeon first with `!tower begin`."

dungeon_state = load_json(dungeon_metadata)

# Initialize participants list if not present
if "participants" not in dungeon_state:
    dungeon_state["participants"] = []

# Check if the user is already a participant
if any(participant["user_id"] == str(user.id) for participant in dungeon_state["participants"]):
    return f"{user.display_name} is already a participant in the dungeon."

# Add the user to participants
dungeon_state["participants"].append({"user_id": str(user.id), "character": cc.name})
current_combat.set_metadata("dungeon_state", dump_json(dungeon_state))

# Debug information: Retrieve and display the metadata
updated_metadata = current_combat.get_metadata("dungeon_state")

# Create the embed message
embed_title = "Dungeon Run Started!"
embed_desc = f"{user.display_name} (playing {cc.name if cc else 'No character'}) has joined the dungeon."
embed_color = 0x00ff00

# Embed fields
fields = [
    {"name": "Riddles Included", "value": str(settings["riddles_included"]), "inline": False},
    {"name": "Number of Floors (Easy)", "value": str(settings["floors_e"]), "inline": False},
    {"name": "Number of Floors (Medium)", "value": str(settings["floors_m"]), "inline": False},
    {"name": "Number of Floors (Hard)", "value": str(settings["floors_h"]), "inline": False},
    {"name": "Number of Floors (Deadly)", "value": str(settings["floors_d"]), "inline": False}
]

# Construct the embed command
embed_cmd = f'embed -title "{embed_title}" -desc "{embed_desc}" -color {embed_color}'
for field in fields:
    embed_cmd += f' -f "{field["name"]}|{field["value"]}"'
if portrait:
    embed_cmd += f' -thumb {portrait}'

return embed_cmd
</drac2>