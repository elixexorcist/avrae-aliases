!alias tower-begin <drac2>
# Load the current settings
settings = get_svar("dungeon_settings")
settings = load_json(settings)

# Get the user who ran the command
user = ctx.author

# Get the user's active character
cc = character()
portrait = cc.image if cc else ""
level = min(get("level", 1), 20)  # Cap level at 20

# Set initial metadata
dungeon_metadata = {
    "controller": str(user.id),
    "participants": [{"user_id": str(user.id), "character": cc.name, "level": level}],
    "dungeon_stage": 'SETUP',
    "current_floor": 0,
    "final_floor": 0,
    "total_xp": 0,
    "difficulty": None
}

# Set metadata in combat
current_combat = combat()
current_combat.set_metadata("dungeon_state", dump_json(dungeon_metadata))

# Create the embed message
embed_title = "Dungeon Run Started!"
embed_desc = f"{user.display_name} (playing {cc.name if cc else 'No character'}) has started the dungeon."
embed_color = 0x00ff00

# Embed fields
fields = [
    {"name": "Riddles Included", "value": str(settings["riddles_included"]), "inline": False},
    {"name": "Number of Floors (Easy)", "value": str(settings["floors_e"]), "inline": False},
    {"name": "Number of Floors (Medium)", "value": str(settings["floors_m"]), "inline": False},
    {"name": "Number of Floors (Hard)", "value": str(settings["floors_h"]), "inline": False},
    {"name": "Number of Floors (Deadly)", "value": str(settings["floors_d"]), "inline": False}
]

# Construct the embed command
embed_cmd = f'embed -title "{embed_title}" -desc "{embed_desc}" -color {embed_color}'
for field in fields:
    embed_cmd += f' -f "{field["name"]}|{field["value"]}"'
if portrait:
    embed_cmd += f' -thumb {portrait}'

return embed_cmd
</drac2>
