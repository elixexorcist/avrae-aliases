!alias tower begin <drac2>
# Check if combat is active
combat_instance = combat()
if not combat_instance:
    return f'embed -title "Error" -desc "No active combat found. Please start the dungeon first with `!init begin`." -color red'

# Check if the user's active character is in combat
cc = character()
if not cc:
    return f'embed -title "Error" -desc "No active character found. Please select an active character and join the combat with `!init join`." -color red'

combatant = combat().get_combatant(cc.name)
if not combatant:
    return f'embed -title "Error" -desc "{cc.name} is not in the combat. Please join the combat with `!init join`." -color red'

# Initialize the dungeon state with all combatants as participants
participants = [{"user_id": str(combatant.controller), "character": combatant.name} for combatant in combat_instance.combatants]

dungeon_state = {
    "controller": str(ctx.author.id),
    "participants": participants,
    "dungeon_stage": "SETUP",
    "current_floor": 0,
    "final_floor": 0,
    "total_xp": 0,
    "difficulty": "none"
}

# Update the initiative metadata with the new dungeon state
combat_instance.set_metadata("dungeon_state", dump_json(dungeon_state))

return f'embed -title "Dungeon Run Initialized!" -desc "{ctx.author.display_name} has initialized the dungeon run. Metadata set with participants." -color 0x00ff00'
</drac2>